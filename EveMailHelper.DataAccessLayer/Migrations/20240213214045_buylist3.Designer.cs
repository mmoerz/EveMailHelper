// <auto-generated />
using System;
using EveMailHelper.DataAccessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EveMailHelper.DataAccessLayer.Migrations
{
    [DbContext(typeof(EveMailHelperContext))]
    [Migration("20240213214045_buylist3")]
    partial class buylist3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AccountRole", b =>
                {
                    b.Property<Guid>("AccountsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RolesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AccountsId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("AccountRole", "Security");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Alliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatorCorporationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateFounded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ExecutorCorporationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorCorporationId")
                        .IsUnique();

                    b.HasIndex("CreatorId")
                        .IsUnique();

                    b.HasIndex("ExecutorCorporationId")
                        .IsUnique()
                        .HasFilter("[ExecutorCorporationId] IS NOT NULL");

                    b.ToTable("Alliances");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BloodlineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CorporationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EveAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExcluded")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInRecruitment")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<int?>("ReallifeAge")
                        .HasColumnType("int");

                    b.Property<string>("RecruitmentNote")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<float?>("SecurityStatus")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("None");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CorporationId");

                    b.HasIndex("EveAccountId");

                    b.ToTable("Character", (string)null);
                });

            modelBuilder.Entity("EveMailHelper.DataModels.CharacterAuthInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("random number for added security");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasComment("oauth accesstoken");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CharId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiresUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(1536)
                        .HasColumnType("nvarchar(1536)")
                        .HasComment("oauth refreshtoken");

                    b.Property<string>("Scopes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("??");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CharId");

                    b.ToTable("CharacterAuthInfos");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttachedToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChannelName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("ChatFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ListenerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SessionStarted")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AttachedToId");

                    b.HasIndex("ChatFileId")
                        .IsUnique();

                    b.HasIndex("ListenerId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.ChatFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("ChatFiles");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ChatId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Corporation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AllianceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CeoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateFounded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HomeStationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MemberCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<long?>("Shares")
                        .HasColumnType("bigint");

                    b.Property<float>("TaxRate")
                        .HasColumnType("real");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Url")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("WarEligible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId");

                    b.HasIndex("CeoId")
                        .IsUnique()
                        .HasFilter("[CeoId] IS NOT NULL");

                    b.HasIndex("CreatorId")
                        .IsUnique()
                        .HasFilter("[CreatorId] IS NOT NULL");

                    b.ToTable("Corporations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11110000-0000-0000-0000-000011110000"),
                            DateFounded = new DateTime(2024, 2, 13, 22, 40, 45, 215, DateTimeKind.Local).AddTicks(8358),
                            Description = "Noname Default",
                            EveDeletedInGame = false,
                            EveId = 0,
                            EveLastUpdated = new DateTime(2024, 2, 13, 21, 40, 45, 215, DateTimeKind.Utc).AddTicks(8329),
                            MemberCount = 0,
                            Name = "Noname Default",
                            TaxRate = 0f,
                            Ticker = "Noname Default",
                            WarEligible = false
                        });
                });

            modelBuilder.Entity("EveMailHelper.DataModels.EveMailSentTo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EveMailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("EveMailId");

                    b.ToTable("EveMailSentTo", (string)null);
                });

            modelBuilder.Entity("EveMailHelper.DataModels.EveMailTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("EveMailTemplate", (string)null);
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Mail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(16000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EveId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("EveMailTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("EveMailTemplateId");

                    b.HasIndex("FromId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Mail", "Eve");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.MailLabel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("EveLabelId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("MailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("UnreadCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("MailId");

                    b.ToTable("MailLabels");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.MailList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MailLists");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.MailRecipient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MailId");

                    b.ToTable("MailRecipients");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MailRecipient");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Market.BuyList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BuyList", "market");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Market.BuyListItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuyListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EveTypeId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BuyListId");

                    b.HasIndex("EveTypeId");

                    b.ToTable("BuyListItem", "market");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Market.MarketOrder", b =>
                {
                    b.Property<long>("EveId")
                        .HasColumnType("bigint");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsBuyOrder")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Issued")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdatedFromEve")
                        .HasColumnType("datetime2");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<int>("MinVolume")
                        .HasColumnType("int");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Range")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SolarSystemId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("VolumeRemain")
                        .HasColumnType("int");

                    b.Property<int>("VolumeTotal")
                        .HasColumnType("int");

                    b.HasKey("EveId");

                    b.HasIndex("SolarSystemId");

                    b.HasIndex("TypeId");

                    b.ToTable("MarketOrder", "market");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Market.MarketPrice", b =>
                {
                    b.Property<int>("EveTypeId")
                        .HasColumnType("int");

                    b.Property<double>("AdjustedPrice")
                        .HasColumnType("float");

                    b.Property<double>("AveragePrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("LastUpdatedFromEve")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.HasKey("EveTypeId");

                    b.ToTable("MarketPrice", "market");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Market.NormalizeProductionCost", b =>
                {
                    b.Property<int>("EveTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedFromEve")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<double>("ProductSellPrice")
                        .HasColumnType("float");

                    b.Property<double>("TotalComponentCost")
                        .HasColumnType("float");

                    b.Property<double>("TotalJobCost")
                        .HasColumnType("float");

                    b.HasKey("EveTypeId", "ActivityId");

                    b.HasIndex("ProductId");

                    b.ToTable("NormalizeProductionCost", "market");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttachedToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AttachedToId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Category", b =>
                {
                    b.Property<int>("EveId")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IconId")
                        .HasColumnType("int");

                    b.Property<bool?>("Published")
                        .HasColumnType("bit");

                    b.HasKey("EveId");

                    b.HasIndex("IconId");

                    b.ToTable("Category", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Character.Faction", b =>
                {
                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<int?>("CorporationId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("IconId")
                        .HasColumnType("int");

                    b.Property<int?>("MilitiaCorporationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<double>("SizeFactor")
                        .HasColumnType("float");

                    b.Property<int>("SolarSystemId")
                        .HasColumnType("int");

                    b.HasKey("EveId");

                    b.HasIndex("CorporationId")
                        .IsUnique()
                        .HasFilter("[CorporationId] IS NOT NULL");

                    b.HasIndex("IconId");

                    b.HasIndex("MilitiaCorporationId")
                        .IsUnique()
                        .HasFilter("[MilitiaCorporationId] IS NOT NULL");

                    b.HasIndex("RaceId");

                    b.HasIndex("SolarSystemId");

                    b.ToTable("Faction", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Character.NpcCorporation", b =>
                {
                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnemyId")
                        .HasColumnType("int");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FactionId")
                        .HasColumnType("int");

                    b.Property<int?>("FriendId")
                        .HasColumnType("int");

                    b.Property<int?>("IconId")
                        .HasColumnType("int");

                    b.Property<int>("InitialPrice")
                        .HasColumnType("int");

                    b.Property<double>("MinSecurity")
                        .HasColumnType("float");

                    b.Property<int>("PublicShares")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SolarSystemId")
                        .HasColumnType("int");

                    b.HasKey("EveId");

                    b.HasIndex("EnemyId");

                    b.HasIndex("FactionId");

                    b.HasIndex("FriendId");

                    b.HasIndex("IconId");

                    b.HasIndex("SolarSystemId");

                    b.ToTable("NpcCorporation", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Character.Race", b =>
                {
                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IconId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("EveId");

                    b.HasIndex("IconId");

                    b.ToTable("Race", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.EveType", b =>
                {
                    b.Property<int>("EveId")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<decimal?>("BasePrice")
                        .HasColumnType("decimal(19,4)");

                    b.Property<double?>("Capacity")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasMaxLength(4096)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GraphicId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("IconId")
                        .HasColumnType("int");

                    b.Property<int?>("MarketGroupId")
                        .HasColumnType("int");

                    b.Property<double?>("Mass")
                        .HasColumnType("float");

                    b.Property<int?>("PortionSize")
                        .HasColumnType("int");

                    b.Property<bool?>("Published")
                        .HasColumnType("bit");

                    b.Property<int?>("RaceId")
                        .HasColumnType("int");

                    b.Property<int?>("SoundId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double?>("Volume")
                        .HasColumnType("float");

                    b.HasKey("EveId");

                    b.HasIndex("GroupId");

                    b.HasIndex("IconId");

                    b.HasIndex("MarketGroupId");

                    b.HasIndex("RaceId");

                    b.ToTable("EveType", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Graphic", b =>
                {
                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GraphicFile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SofFactionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SofHullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SofRaceName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EveId");

                    b.ToTable("Graphic", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Group", b =>
                {
                    b.Property<int>("EveId")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<bool?>("Anchorable")
                        .HasColumnType("bit");

                    b.Property<bool?>("Anchored")
                        .HasColumnType("bit");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("FittableNonSingleton")
                        .HasColumnType("bit");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("IconId")
                        .HasColumnType("int");

                    b.Property<bool?>("Published")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseBasePrice")
                        .HasColumnType("bit");

                    b.HasKey("EveId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("IconId");

                    b.ToTable("Group", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Icon", b =>
                {
                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconFile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("EveId");

                    b.ToTable("Icon", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.IndustryActivity", b =>
                {
                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Time")
                        .HasColumnType("int");

                    b.HasKey("TypeId", "ActivityId");

                    b.ToTable("IndustryActivity", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.IndustryActivityMaterial", b =>
                {
                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("TypeId", "ActivityId", "MaterialTypeId");

                    b.HasIndex("ActivityId");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("IndustryActivityMaterial", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.IndustryActivityProbability", b =>
                {
                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Probability")
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("TypeId", "ActivityId", "ProductTypeId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("IndustryActivityProbability", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.IndustryActivityProduct", b =>
                {
                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("TypeId", "ActivityId", "ProductTypeId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("IndustryActivityProduct", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.IndustryBlueprint", b =>
                {
                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaxProductionLimit")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("TypeId");

                    b.ToTable("IndustryBlueprint", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Map.Constellation", b =>
                {
                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("Radius")
                        .HasColumnType("float");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<double>("X")
                        .HasColumnType("float");

                    b.Property<double>("XMax")
                        .HasColumnType("float");

                    b.Property<double>("XMin")
                        .HasColumnType("float");

                    b.Property<double>("Y")
                        .HasColumnType("float");

                    b.Property<double>("YMax")
                        .HasColumnType("float");

                    b.Property<double>("YMin")
                        .HasColumnType("float");

                    b.Property<double>("Z")
                        .HasColumnType("float");

                    b.Property<double>("ZMax")
                        .HasColumnType("float");

                    b.Property<double>("ZMin")
                        .HasColumnType("float");

                    b.HasKey("EveId");

                    b.HasIndex("FactionId");

                    b.HasIndex("RegionId");

                    b.ToTable("Constellation", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Map.Region", b =>
                {
                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<int?>("FactionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Nebula")
                        .HasColumnType("int");

                    b.Property<double?>("Radius")
                        .HasColumnType("float");

                    b.Property<double>("X")
                        .HasColumnType("float");

                    b.Property<double>("XMax")
                        .HasColumnType("float");

                    b.Property<double>("XMin")
                        .HasColumnType("float");

                    b.Property<double>("Y")
                        .HasColumnType("float");

                    b.Property<double>("YMax")
                        .HasColumnType("float");

                    b.Property<double>("YMin")
                        .HasColumnType("float");

                    b.Property<double>("Z")
                        .HasColumnType("float");

                    b.Property<double>("ZMax")
                        .HasColumnType("float");

                    b.Property<double>("ZMin")
                        .HasColumnType("float");

                    b.HasKey("EveId");

                    b.HasIndex("FactionId");

                    b.ToTable("Region", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Map.SolarSystem", b =>
                {
                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<bool>("Border")
                        .HasColumnType("bit");

                    b.Property<int>("ConstellationId")
                        .HasColumnType("int");

                    b.Property<bool>("Corridor")
                        .HasColumnType("bit");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactionId")
                        .HasColumnType("int");

                    b.Property<bool>("Fringe")
                        .HasColumnType("bit");

                    b.Property<bool>("Hub")
                        .HasColumnType("bit");

                    b.Property<bool>("International")
                        .HasColumnType("bit");

                    b.Property<double>("Luminosity")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("Radius")
                        .HasColumnType("float");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<bool>("Regional")
                        .HasColumnType("bit");

                    b.Property<double>("Security")
                        .HasColumnType("float");

                    b.Property<string>("SecurityClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SunTypeId")
                        .HasColumnType("int");

                    b.Property<double>("X")
                        .HasColumnType("float");

                    b.Property<double>("XMax")
                        .HasColumnType("float");

                    b.Property<double>("XMin")
                        .HasColumnType("float");

                    b.Property<double>("Y")
                        .HasColumnType("float");

                    b.Property<double>("YMax")
                        .HasColumnType("float");

                    b.Property<double>("YMin")
                        .HasColumnType("float");

                    b.Property<double>("Z")
                        .HasColumnType("float");

                    b.Property<double>("ZMax")
                        .HasColumnType("float");

                    b.Property<double>("ZMin")
                        .HasColumnType("float");

                    b.HasKey("EveId");

                    b.HasIndex("ConstellationId");

                    b.HasIndex("FactionId");

                    b.HasIndex("RegionId");

                    b.ToTable("SolarSystem", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.MarketGroup", b =>
                {
                    b.Property<int>("EveId")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("EveDeletedInGame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EveLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("HasTypes")
                        .HasColumnType("bit");

                    b.Property<int?>("IconId")
                        .HasColumnType("int");

                    b.Property<string>("MarketGroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentGroupId")
                        .HasColumnType("int");

                    b.HasKey("EveId");

                    b.HasIndex("IconId");

                    b.HasIndex("ParentGroupId");

                    b.ToTable("MarketGroup", "Sde");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Security.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Account", "Security");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Security.EveAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("EveAccount", "Security");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Security.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Permission", "Security");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Security.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Role", "Security");
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.Property<Guid>("PermissionsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RolesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermissionsId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("PermissionRole", "Security");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.MailRecipientCharacter", b =>
                {
                    b.HasBaseType("EveMailHelper.DataModels.MailRecipient");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("CharacterId");

                    b.HasDiscriminator().HasValue("MailRecipientCharacter");
                });

            modelBuilder.Entity("AccountRole", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Security.Account", null)
                        .WithMany()
                        .HasForeignKey("AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Security.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Alliance", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Corporation", "CreatorCorporation")
                        .WithOne()
                        .HasForeignKey("EveMailHelper.DataModels.Alliance", "CreatorCorporationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Character", "Creator")
                        .WithOne()
                        .HasForeignKey("EveMailHelper.DataModels.Alliance", "CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Corporation", "ExecutorCorporation")
                        .WithOne()
                        .HasForeignKey("EveMailHelper.DataModels.Alliance", "ExecutorCorporationId");

                    b.Navigation("Creator");

                    b.Navigation("CreatorCorporation");

                    b.Navigation("ExecutorCorporation");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Character", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Security.Account", "Account")
                        .WithMany("Characters")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Corporation", "Corporation")
                        .WithMany("Members")
                        .HasForeignKey("CorporationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EveMailHelper.DataModels.Security.EveAccount", "EveAccount")
                        .WithMany("Characters")
                        .HasForeignKey("EveAccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Corporation");

                    b.Navigation("EveAccount");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.CharacterAuthInfo", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Security.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("EveMailHelper.DataModels.Character", "Char")
                        .WithMany()
                        .HasForeignKey("CharId");

                    b.Navigation("Account");

                    b.Navigation("Char");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Chat", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Character", "AttachedTo")
                        .WithMany("Chats")
                        .HasForeignKey("AttachedToId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.ChatFile", "ChatFile")
                        .WithOne("Chat")
                        .HasForeignKey("EveMailHelper.DataModels.Chat", "ChatFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Character", "Listener")
                        .WithMany()
                        .HasForeignKey("ListenerId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("AttachedTo");

                    b.Navigation("ChatFile");

                    b.Navigation("Listener");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.ChatMessage", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Character", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Corporation", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Alliance", "Alliance")
                        .WithMany("Corporations")
                        .HasForeignKey("AllianceId");

                    b.HasOne("EveMailHelper.DataModels.Character", "Ceo")
                        .WithOne()
                        .HasForeignKey("EveMailHelper.DataModels.Corporation", "CeoId");

                    b.HasOne("EveMailHelper.DataModels.Character", "Creator")
                        .WithOne()
                        .HasForeignKey("EveMailHelper.DataModels.Corporation", "CreatorId");

                    b.Navigation("Alliance");

                    b.Navigation("Ceo");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.EveMailSentTo", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Character", "Character")
                        .WithMany("EveMailReceived")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Mail", "EveMail")
                        .WithMany("SentTo")
                        .HasForeignKey("EveMailId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("EveMail");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Mail", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.EveMailTemplate", "EveMailTemplate")
                        .WithMany("EveMailsGenerated")
                        .HasForeignKey("EveMailTemplateId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EveMailHelper.DataModels.Character", "From")
                        .WithMany()
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Character", "Owner")
                        .WithMany("Mails")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("EveMailTemplate");

                    b.Navigation("From");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.MailLabel", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Mail", null)
                        .WithMany("Labels")
                        .HasForeignKey("MailId");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.MailRecipient", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Mail", "Mail")
                        .WithMany("Recipients")
                        .HasForeignKey("MailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mail");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Market.BuyListItem", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Market.BuyList", "BuyList")
                        .WithMany("ItemList")
                        .HasForeignKey("BuyListId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Sde.EveType", "EveType")
                        .WithMany()
                        .HasForeignKey("EveTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("BuyList");

                    b.Navigation("EveType");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Market.MarketOrder", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.Map.SolarSystem", "SolarSystem")
                        .WithMany()
                        .HasForeignKey("SolarSystemId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Sde.EveType", "EveType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("EveType");

                    b.Navigation("SolarSystem");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Market.NormalizeProductionCost", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.EveType", "EveType")
                        .WithMany()
                        .HasForeignKey("EveTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Sde.EveType", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Sde.IndustryActivity", "IndustryActivity")
                        .WithMany("NormalizeProductionCosts")
                        .HasForeignKey("EveTypeId", "ActivityId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("EveType");

                    b.Navigation("IndustryActivity");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Note", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Character", "AttachedTo")
                        .WithMany("Notes")
                        .HasForeignKey("AttachedToId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("AttachedTo");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Category", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.Icon", "Icon")
                        .WithMany("InvCategories")
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Character.Faction", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.Character.NpcCorporation", "Corporation")
                        .WithOne()
                        .HasForeignKey("EveMailHelper.DataModels.Sde.Character.Faction", "CorporationId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EveMailHelper.DataModels.Sde.Icon", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Sde.Character.NpcCorporation", "MilitiaCorporation")
                        .WithOne()
                        .HasForeignKey("EveMailHelper.DataModels.Sde.Character.Faction", "MilitiaCorporationId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EveMailHelper.DataModels.Sde.Character.Race", "Race")
                        .WithMany("Factions")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Sde.Map.SolarSystem", "SolarSystem")
                        .WithMany()
                        .HasForeignKey("SolarSystemId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Corporation");

                    b.Navigation("Icon");

                    b.Navigation("MilitiaCorporation");

                    b.Navigation("Race");

                    b.Navigation("SolarSystem");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Character.NpcCorporation", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.Character.NpcCorporation", "Enemy")
                        .WithMany()
                        .HasForeignKey("EnemyId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EveMailHelper.DataModels.Sde.Character.Faction", "Faction")
                        .WithMany("NpcCorporations")
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EveMailHelper.DataModels.Sde.Character.NpcCorporation", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EveMailHelper.DataModels.Sde.Icon", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EveMailHelper.DataModels.Sde.Map.SolarSystem", "SolarSystem")
                        .WithMany()
                        .HasForeignKey("SolarSystemId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Enemy");

                    b.Navigation("Faction");

                    b.Navigation("Friend");

                    b.Navigation("Icon");

                    b.Navigation("SolarSystem");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Character.Race", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.Icon", "Icon")
                        .WithMany("ChrRaces")
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.EveType", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.Group", "Group")
                        .WithMany("InvTypes")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EveMailHelper.DataModels.Sde.Icon", "Icon")
                        .WithMany("InvTypes")
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EveMailHelper.DataModels.Sde.MarketGroup", "MarketGroup")
                        .WithMany("InvTypes")
                        .HasForeignKey("MarketGroupId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EveMailHelper.DataModels.Sde.Character.Race", "Race")
                        .WithMany("InvTypes")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Group");

                    b.Navigation("Icon");

                    b.Navigation("MarketGroup");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Group", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.Category", "Category")
                        .WithMany("InvGroups")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EveMailHelper.DataModels.Sde.Icon", "Icon")
                        .WithMany("InvGroups")
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Category");

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.IndustryActivity", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.EveType", "Type")
                        .WithMany("IndustryActivities")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.IndustryActivityMaterial", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.EveType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Sde.EveType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Sde.IndustryActivity", "IndustryActivity")
                        .WithMany("Materials")
                        .HasForeignKey("TypeId", "ActivityId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("IndustryActivity");

                    b.Navigation("MaterialType");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.IndustryActivityProbability", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.EveType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Sde.IndustryActivity", "IndustryActivity")
                        .WithMany("Probabilities")
                        .HasForeignKey("TypeId", "ActivityId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("IndustryActivity");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.IndustryActivityProduct", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.EveType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Sde.IndustryActivity", "IndustryActivity")
                        .WithMany("Products")
                        .HasForeignKey("TypeId", "ActivityId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("IndustryActivity");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.IndustryBlueprint", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.EveType", "Type")
                        .WithOne("IndustryBlueprint")
                        .HasForeignKey("EveMailHelper.DataModels.Sde.IndustryBlueprint", "TypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Map.Constellation", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.Character.Faction", "Faction")
                        .WithMany("Constellations")
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EveMailHelper.DataModels.Sde.Map.Region", "Region")
                        .WithMany("Constellations")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Faction");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Map.Region", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.Character.Faction", "Faction")
                        .WithMany("Regions")
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Map.SolarSystem", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.Map.Constellation", "Constellation")
                        .WithMany("SolarSystems")
                        .HasForeignKey("ConstellationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Sde.Character.Faction", "Faction")
                        .WithMany("SolarSystems")
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EveMailHelper.DataModels.Sde.Map.Region", "Region")
                        .WithMany("SolarSystems")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Constellation");

                    b.Navigation("Faction");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.MarketGroup", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Sde.Icon", "Icon")
                        .WithMany("InvMarketGroups")
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EveMailHelper.DataModels.Sde.MarketGroup", "ParentGroup")
                        .WithMany("InverseParentGroup")
                        .HasForeignKey("ParentGroupId");

                    b.Navigation("Icon");

                    b.Navigation("ParentGroup");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Security.EveAccount", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Security.Account", "Account")
                        .WithMany("EveAccounts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Security.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EveMailHelper.DataModels.Security.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EveMailHelper.DataModels.MailRecipientCharacter", b =>
                {
                    b.HasOne("EveMailHelper.DataModels.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Alliance", b =>
                {
                    b.Navigation("Corporations");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Character", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("EveMailReceived");

                    b.Navigation("Mails");

                    b.Navigation("Notes");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.ChatFile", b =>
                {
                    b.Navigation("Chat")
                        .IsRequired();
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Corporation", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.EveMailTemplate", b =>
                {
                    b.Navigation("EveMailsGenerated");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Mail", b =>
                {
                    b.Navigation("Labels");

                    b.Navigation("Recipients");

                    b.Navigation("SentTo");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Market.BuyList", b =>
                {
                    b.Navigation("ItemList");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Category", b =>
                {
                    b.Navigation("InvGroups");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Character.Faction", b =>
                {
                    b.Navigation("Constellations");

                    b.Navigation("NpcCorporations");

                    b.Navigation("Regions");

                    b.Navigation("SolarSystems");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Character.Race", b =>
                {
                    b.Navigation("Factions");

                    b.Navigation("InvTypes");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.EveType", b =>
                {
                    b.Navigation("IndustryActivities");

                    b.Navigation("IndustryBlueprint");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Group", b =>
                {
                    b.Navigation("InvTypes");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Icon", b =>
                {
                    b.Navigation("ChrRaces");

                    b.Navigation("InvCategories");

                    b.Navigation("InvGroups");

                    b.Navigation("InvMarketGroups");

                    b.Navigation("InvTypes");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.IndustryActivity", b =>
                {
                    b.Navigation("Materials");

                    b.Navigation("NormalizeProductionCosts");

                    b.Navigation("Probabilities");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Map.Constellation", b =>
                {
                    b.Navigation("SolarSystems");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.Map.Region", b =>
                {
                    b.Navigation("Constellations");

                    b.Navigation("SolarSystems");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Sde.MarketGroup", b =>
                {
                    b.Navigation("InvTypes");

                    b.Navigation("InverseParentGroup");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Security.Account", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("EveAccounts");
                });

            modelBuilder.Entity("EveMailHelper.DataModels.Security.EveAccount", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
